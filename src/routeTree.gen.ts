/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as KioskRouteImport } from './routes/kiosk/route'
import { Route as AdminRouteImport } from './routes/admin/route'
import { Route as IndexImport } from './routes/index'
import { Route as KioskIndexImport } from './routes/kiosk/index'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as AdminSplatImport } from './routes/admin/$'
import { Route as KioskNowServingIndexImport } from './routes/kiosk/now-serving/index'
import { Route as AdminLoginIndexImport } from './routes/admin_/login/index'
import { Route as AdminUserManagementIndexImport } from './routes/admin/user-management/index'
import { Route as AdminQueueingIndexImport } from './routes/admin/queueing/index'
import { Route as AdminMonitorManagementIndexImport } from './routes/admin/monitor-management/index'
import { Route as AdminKioskManagementIndexImport } from './routes/admin/kiosk-management/index'
import { Route as AdminDashboardIndexImport } from './routes/admin/dashboard/index'
import { Route as AdminCounterSelectionIndexImport } from './routes/admin/counter-selection/index'
import { Route as AdminCounterManagementIndexImport } from './routes/admin/counter-management/index'
import { Route as AdminAppointmentsIndexImport } from './routes/admin/appointments/index'
import { Route as AdminAnalyticsIndexImport } from './routes/admin/analytics/index'
import { Route as AdminMonitorManagementAddMonitorIndexImport } from './routes/admin/monitor-management/add-monitor/index'

// Create/Update Routes

const KioskRouteRoute = KioskRouteImport.update({
  path: '/kiosk',
  getParentRoute: () => rootRoute,
} as any)

const AdminRouteRoute = AdminRouteImport.update({
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const KioskIndexRoute = KioskIndexImport.update({
  path: '/',
  getParentRoute: () => KioskRouteRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  path: '/',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminSplatRoute = AdminSplatImport.update({
  path: '/$',
  getParentRoute: () => AdminRouteRoute,
} as any)

const KioskNowServingIndexRoute = KioskNowServingIndexImport.update({
  path: '/now-serving/',
  getParentRoute: () => KioskRouteRoute,
} as any)

const AdminLoginIndexRoute = AdminLoginIndexImport.update({
  path: '/admin/login/',
  getParentRoute: () => rootRoute,
} as any)

const AdminUserManagementIndexRoute = AdminUserManagementIndexImport.update({
  path: '/user-management/',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminQueueingIndexRoute = AdminQueueingIndexImport.update({
  path: '/queueing/',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminMonitorManagementIndexRoute =
  AdminMonitorManagementIndexImport.update({
    path: '/monitor-management/',
    getParentRoute: () => AdminRouteRoute,
  } as any)

const AdminKioskManagementIndexRoute = AdminKioskManagementIndexImport.update({
  path: '/kiosk-management/',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminDashboardIndexRoute = AdminDashboardIndexImport.update({
  path: '/dashboard/',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminCounterSelectionIndexRoute = AdminCounterSelectionIndexImport.update(
  {
    path: '/counter-selection/',
    getParentRoute: () => AdminRouteRoute,
  } as any,
)

const AdminCounterManagementIndexRoute =
  AdminCounterManagementIndexImport.update({
    path: '/counter-management/',
    getParentRoute: () => AdminRouteRoute,
  } as any)

const AdminAppointmentsIndexRoute = AdminAppointmentsIndexImport.update({
  path: '/appointments/',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminAnalyticsIndexRoute = AdminAnalyticsIndexImport.update({
  path: '/analytics/',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminMonitorManagementAddMonitorIndexRoute =
  AdminMonitorManagementAddMonitorIndexImport.update({
    path: '/monitor-management/add-monitor/',
    getParentRoute: () => AdminRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRoute
    }
    '/kiosk': {
      preLoaderRoute: typeof KioskRouteImport
      parentRoute: typeof rootRoute
    }
    '/admin/$': {
      preLoaderRoute: typeof AdminSplatImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/': {
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/kiosk/': {
      preLoaderRoute: typeof KioskIndexImport
      parentRoute: typeof KioskRouteImport
    }
    '/admin/analytics/': {
      preLoaderRoute: typeof AdminAnalyticsIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/appointments/': {
      preLoaderRoute: typeof AdminAppointmentsIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/counter-management/': {
      preLoaderRoute: typeof AdminCounterManagementIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/counter-selection/': {
      preLoaderRoute: typeof AdminCounterSelectionIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/dashboard/': {
      preLoaderRoute: typeof AdminDashboardIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/kiosk-management/': {
      preLoaderRoute: typeof AdminKioskManagementIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/monitor-management/': {
      preLoaderRoute: typeof AdminMonitorManagementIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/queueing/': {
      preLoaderRoute: typeof AdminQueueingIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/user-management/': {
      preLoaderRoute: typeof AdminUserManagementIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/login/': {
      preLoaderRoute: typeof AdminLoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/kiosk/now-serving/': {
      preLoaderRoute: typeof KioskNowServingIndexImport
      parentRoute: typeof KioskRouteImport
    }
    '/admin/monitor-management/add-monitor/': {
      preLoaderRoute: typeof AdminMonitorManagementAddMonitorIndexImport
      parentRoute: typeof AdminRouteImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  AdminRouteRoute.addChildren([
    AdminSplatRoute,
    AdminIndexRoute,
    AdminAnalyticsIndexRoute,
    AdminAppointmentsIndexRoute,
    AdminCounterManagementIndexRoute,
    AdminCounterSelectionIndexRoute,
    AdminDashboardIndexRoute,
    AdminKioskManagementIndexRoute,
    AdminMonitorManagementIndexRoute,
    AdminQueueingIndexRoute,
    AdminUserManagementIndexRoute,
    AdminMonitorManagementAddMonitorIndexRoute,
  ]),
  KioskRouteRoute.addChildren([KioskIndexRoute, KioskNowServingIndexRoute]),
  AdminLoginIndexRoute,
])

/* prettier-ignore-end */
